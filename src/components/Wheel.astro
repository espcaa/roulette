---
const choices = {
  "camera":["2d top down", "2d side scrolling", "2d isometric", "3d first person", "3d free camera", "2.5d", "interface-based"],
  "gameplay": ["puzzle", "platformer", "arcade", "rhythm", "story-based", "survival", "management", "combat", "stealth", "exploration", "deckbuilder", "clicker"],
  "setting": ["nature", "urban", "futuristic", "dystopian", "surreal", "digital", "fantasy", "non-world"]
  }

const { wheelChoice } = Astro.props;

const items = choices[wheelChoice];
const count = items.length
const pos_deg = `${ (360 / count) /2 }deg`
const neg_deg = `-${ (360 / count) /2 }deg`
const skew_pos = `${ 90 - (360/count) }deg`
const skew_neg = `-${ 90 - (360/count) }deg`

const text_angle = `-${ -2.5 * (360 / count) + 216 }deg`


const offsets = {
  6: { left: 0, bottom: 40 },
  7: { left: 70, bottom: 5 },
  8: { left: 100, bottom: -15 },
  9: { left: 140, bottom: -40 },
  10: { left: 220, bottom: -70 },
  12: { left: 260, bottom: -70 }
}

const text_margin_left = `${offsets[count].left}px`
const text_margin_bottom = `${offsets[count].bottom}px`

---



<ul>

{
  items.map( (data, index) =>
    <li style=`--count: ${index};`><div><p>{data}</p></div></li>
    )

}

</ul>


<style define:vars={{ pos_deg, neg_deg, skew_pos, skew_neg, text_angle, text_margin_left, text_margin_bottom }}>

ul {
  transform:rotate( var(--neg_deg) );
  height:250px;
  width:250px;
  border-radius:50%;

  padding:0;
  margin:5em auto;
  position:relative;
  border: 4px solid var(--pink);
  overflow:hidden;
  background-color: var(--black);
}

li {
  /* transform:skewy(var(--skew_neg)); */
  padding:0;
  height:200px;
  width:200px;
  display:block;
  position:absolute;
  transform-origin:0 200px;
  left:125px;top:-75px;
  /* overflow:hidden; */
  border: 1px solid var(--pink);
}


li {
  transform:rotate( calc(var(--pos_deg) * 2 * var(--count))) skewy(var(--skew_neg));
}


li div {
  display: inline-block;
}
li div {
  margin:0px;
  transform: skewy(var(--skew_pos)) rotate(var(--skew_pos));
  transform-origin:90px 52px;
  display:block;
  text-align:left;
  height:90%;
  border-radius:250px;
  margin-top:25px;
  /* padding-top:35px; */
  font-weight:bold;
  text-decoration:none;
  color: inherit;

  display: flex;
  flex-flow: column;
  justify-content: flex-end;
}

li p {
  transform: rotate(var(--text_angle));


  font-size: 0.5em;
  margin-left: var(--text_margin_left);
  margin-bottom: var(--text_margin_bottom);
  text-wrap: nowrap;
}


li:hover {
  background-color: var(--pink);
}

li:hover p {
  color: var(--black);
}




</style>
